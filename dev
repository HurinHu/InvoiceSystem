#!/bin/bash
function block_for_change {
  inotifywait --recursive --event modify,move,create,delete src/
}

function update {
  gradle war
  docker container kill $(docker ps | grep "invoicesystem_backend" | awk '{ print $1 }')
  docker container kill $(docker ps | grep "invoicesystem_phpmyadmin" | awk '{ print $1 }')
  docker container kill $(docker ps | grep "invoicesystem_db" | awk '{ print $1 }')
  docker rm $(docker ps -a | grep "invoicesystem_backend" | awk '{ print $1 }')
  docker rm $(docker ps -a | grep "invoicesystem_phpmyadmin" | awk '{ print $1 }')
  docker rm $(docker ps -a | grep "invoicesystem_db" | awk '{ print $1 }')

  sudo chown -R nora:nora db

  docker-compose up --no-deps --build --abort-on-container-exit --remove-orphans &
}

if [ "$1" == "frontend" ]; then
  cd frontend
  yarn start
elif [ "$1" == "backend" ]; then
  cd backend
  update
  if [ "$(uname)" == "Darwin" ]; then
    watchman -- trigger src/ update '*' -- update
  elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    while block_for_change; do
      update
    done
  fi
elif [ "$1" == "test" ]; then
  cd backend
  gradle test
  cd ..
elif [ "$1" == "war" ]; then
  cd backend
  gradle war
  cd ..
fi
